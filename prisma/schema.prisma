generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Province {
  id   Int    @id @default(autoincrement())
  name String
  City City[]
}

model City {
  id         Int        @id @default(autoincrement())
  name       String
  Province   Province   @relation(fields: [provinceId], references: [id])
  provinceId Int
  Personal   Personal[]
}

model Sex {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model MaritalStatus {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model Function {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model LaboralRegime {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model LaboralRelationship {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model Journal {
  id       Int        @id @default(autoincrement())
  name     String
  Personal Personal[]
}

model Personal {
  id                              Int                               @id @default(autoincrement())
  uuid                            String                            @unique
  identificationCard              String
  names                           String
  lastNames                       String
  phone                           String?
  email                           String?
  birthdate                       DateTime?
  childrens                       Int?
  address                         String?
  sexId                           Int?
  Sex                             Sex?                              @relation(fields: [sexId], references: [id])
  maritalStatusId                 Int?
  maritalStatus                   MaritalStatus?                    @relation(fields: [maritalStatusId], references: [id])
  cityId                          Int?
  City                            City?                             @relation(fields: [cityId], references: [id])
  functionId                      Int?
  Function                        Function?                         @relation(fields: [functionId], references: [id])
  LaboralRegime                   LaboralRegime?                    @relation(fields: [laboralRegimeId], references: [id])
  laboralRegimeId                 Int?
  LaboralRelationship             LaboralRelationship?              @relation(fields: [laboralRelationshipId], references: [id])
  laboralRelationshipId           Int?
  Journal                         Journal?                          @relation(fields: [journalId], references: [id])
  journalId                       Int?
  AssistancePersonalIdentificator AssistancePersonalIdentificator[]
  CampusPersonal                  CampusPersonal[]
}

model Campus {
  id                    Int                     @id @default(autoincrement())
  name                  String
  secondaryName         String
  address               String
  AssistanceDispositive AssistanceDispositive[]
  CampusPersonal        CampusPersonal[]
}

model CampusPersonal {
  id         Int      @id @default(autoincrement())
  campusId   Int
  Campus     Campus   @relation(fields: [campusId], references: [id])
  PersonalId Int
  Personal   Personal @relation(fields: [PersonalId], references: [id])
}

model AssistanceDispositive {
  id                              Int                               @id @default(autoincrement())
  name                            String
  campusId                        Int
  Campus                          Campus                            @relation(fields: [campusId], references: [id])
  serial                          String                            @unique
  AssistancePersonalIdentificator AssistancePersonalIdentificator[]
}

model AssistancePersonalIdentificator {
  id                      Int                   @id @default(autoincrement())
  code                    String
  PersonalId              Int
  Personal                Personal              @relation(fields: [PersonalId], references: [id])
  assistanceDispositiveId Int
  AssistanceDispositive   AssistanceDispositive @relation(fields: [assistanceDispositiveId], references: [id])
}
